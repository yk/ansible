-   hosts: dco

    remote_user: root

    vars:
        -   username: ykilcher

    tasks:
        -   name: create remote non-root user
            user: name={{ username }}

        -   name: add public key
            authorized_key: user={{ username }} key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

        -   name: add user to sudoers
            lineinfile: "dest=/etc/sudoers state=present regexp='^{{ username }}' line='{{ username }} ALL=(ALL) NOPASSWD: ALL'"


-   hosts: dco

    environment:
        PATH: "{{ ansible_env.PATH }}:~/bin"

    tasks:
        -   name: create bin dir
            file: path=~/bin state=directory mode=0755

        -   name: install stuff
            sudo: yes
            yum: name=freetype,freetype-devel,lapack,lapack-devel,blas,blas-devel,libffi,libffi-devel,libpng,libpng-devel,openssl-devel,curl,vim,python,python3,swig,zip,unzip,gcc,python-devel,python3-devel,gcc-c++,gcc-gfortran,git,java-1.8.0-openjdk-devel,zlib-devel,screen state=present

        -   name: get pip install script
            shell: curl https://bootstrap.pypa.io/get-pip.py creates=get-pip.py

        -   name: install pip
            shell: python get-pip.py creates=/usr/bin/pip

        -   name: install pip3
            shell: python3 get-pip.py creates=/usr/bin/pip3

        -   name: install python packages
            sudo: yes
            pip: name={{ item }} executable=/usr/bin/pip
            with_items:
                -   requests[security]
                -   numpy
                -   scipy
                -   sklearn
                -   matplotlib


        -   name: install python3 packages
            sudo: yes
            pip: name={{ item }} executable=/usr/bin/pip3
            with_items:
                -   requests[security]
                -   numpy
                -   scipy
                -   sklearn
                -   matplotlib
        
        -   name: clone bazel
            git: repo=https://github.com/bazelbuild/bazel.git dest=~/git/bazel

        -   name: compile bazel
            shell: cd ~/git/bazel && ./compile.sh && cd ~/bin && ln -s ~/git/bazel/output/bazel creates=~/bin/bazel

        -   name: clone tensorflow
            git: repo=https://github.com/tensorflow/tensorflow.git dest=~/git/tensorflow

        -   name: compile tensorflow
            shell: cd ~/git/tensorflow && yes '' | ./configure && bazel build -c opt tensorflow/models/rnn/ptb:ptb_word_lm

